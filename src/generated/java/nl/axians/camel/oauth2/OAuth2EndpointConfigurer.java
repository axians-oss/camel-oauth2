/* Generated by camel build tools - do NOT edit this file! */
package nl.axians.camel.oauth2;

import java.util.Map;

import org.apache.camel.CamelContext;
import org.apache.camel.spi.ExtendedPropertyConfigurerGetter;
import org.apache.camel.spi.PropertyConfigurerGetter;
import org.apache.camel.spi.ConfigurerStrategy;
import org.apache.camel.spi.GeneratedPropertyConfigurer;
import org.apache.camel.util.CaseInsensitiveMap;
import org.apache.camel.support.component.PropertyConfigurerSupport;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@SuppressWarnings("unchecked")
public class OAuth2EndpointConfigurer extends PropertyConfigurerSupport implements GeneratedPropertyConfigurer, PropertyConfigurerGetter {

    @Override
    public boolean configure(CamelContext camelContext, Object obj, String name, Object value, boolean ignoreCase) {
        OAuth2Endpoint target = (OAuth2Endpoint) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "accesstokenurl":
        case "accessTokenUrl": target.getConfiguration().setAccessTokenUrl(property(camelContext, java.lang.String.class, value)); return true;
        case "clientid":
        case "clientId": target.getConfiguration().setClientId(property(camelContext, java.lang.String.class, value)); return true;
        case "clientsecret":
        case "clientSecret": target.getConfiguration().setClientSecret(property(camelContext, java.lang.String.class, value)); return true;
        case "lazystartproducer":
        case "lazyStartProducer": target.setLazyStartProducer(property(camelContext, boolean.class, value)); return true;
        case "scope": target.getConfiguration().setScope(property(camelContext, java.lang.String.class, value)); return true;
        case "tokenexpirationthreshold":
        case "tokenExpirationThreshold": target.getConfiguration().setTokenExpirationThreshold(property(camelContext, long.class, value)); return true;
        default: return false;
        }
    }

    @Override
    public Class<?> getOptionType(String name, boolean ignoreCase) {
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "accesstokenurl":
        case "accessTokenUrl": return java.lang.String.class;
        case "clientid":
        case "clientId": return java.lang.String.class;
        case "clientsecret":
        case "clientSecret": return java.lang.String.class;
        case "lazystartproducer":
        case "lazyStartProducer": return boolean.class;
        case "scope": return java.lang.String.class;
        case "tokenexpirationthreshold":
        case "tokenExpirationThreshold": return long.class;
        default: return null;
        }
    }

    @Override
    public Object getOptionValue(Object obj, String name, boolean ignoreCase) {
        OAuth2Endpoint target = (OAuth2Endpoint) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "accesstokenurl":
        case "accessTokenUrl": return target.getConfiguration().getAccessTokenUrl();
        case "clientid":
        case "clientId": return target.getConfiguration().getClientId();
        case "clientsecret":
        case "clientSecret": return target.getConfiguration().getClientSecret();
        case "lazystartproducer":
        case "lazyStartProducer": return target.isLazyStartProducer();
        case "scope": return target.getConfiguration().getScope();
        case "tokenexpirationthreshold":
        case "tokenExpirationThreshold": return target.getConfiguration().getTokenExpirationThreshold();
        default: return null;
        }
    }
}

